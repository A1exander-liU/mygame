package com.mygdx.game.engine;

import com.badlogic.ashley.core.ComponentMapper;
import com.mygdx.game.engine.components.AttackRange;
import com.mygdx.game.engine.components.Camera;
import com.mygdx.game.engine.components.CollidableComponent;
import com.mygdx.game.engine.components.DetectionProximity;
import com.mygdx.game.engine.components.Enemy;
import com.mygdx.game.engine.components.EnemyStateMachine;
import com.mygdx.game.engine.components.EquipTypeComponent;
import com.mygdx.game.engine.components.ExpComponent;
import com.mygdx.game.engine.components.Health;
import com.mygdx.game.engine.components.ID;
import com.mygdx.game.engine.components.Item;
import com.mygdx.game.engine.components.LevelComponent;
import com.mygdx.game.engine.components.ManaComponent;
import com.mygdx.game.engine.components.MovementBehavior;
import com.mygdx.game.engine.components.Name;
import com.mygdx.game.engine.components.ObstacleComponent;
import com.mygdx.game.engine.components.Orientation;
import com.mygdx.game.engine.components.ParameterComponent;
import com.mygdx.game.engine.components.Player;
import com.mygdx.game.engine.components.Position;
import com.mygdx.game.engine.components.Size;
import com.mygdx.game.engine.components.Spawn;
import com.mygdx.game.engine.components.SpawnArea;
import com.mygdx.game.engine.components.Speed;
import com.mygdx.game.engine.components.Sprite;
import com.mygdx.game.engine.components.StateComponent;
import com.mygdx.game.engine.components.Steering;
import com.mygdx.game.engine.components.inventory.InventoryComponent;
import com.mygdx.game.engine.components.inventory.InventorySlotComponent;
import com.mygdx.game.engine.components.inventory.items.shared.DescriptionComponent;
import com.mygdx.game.engine.components.inventory.items.shared.InventoryItemComponent;
import com.mygdx.game.engine.components.inventory.items.shared.QuantityComponent;
import com.mygdx.game.engine.components.inventory.items.shared.RarityComponent;


public class Mappers {
    public static final ComponentMapper<DescriptionComponent> description = ComponentMapper.getFor(DescriptionComponent.class);
    public static final ComponentMapper<InventoryItemComponent> inventoryItem = ComponentMapper.getFor(InventoryItemComponent.class);
    public static final ComponentMapper<QuantityComponent> quantity = ComponentMapper.getFor(QuantityComponent.class);
    public static final ComponentMapper<RarityComponent> rarity = ComponentMapper.getFor(RarityComponent.class);
    public static final ComponentMapper<InventoryComponent> inventory = ComponentMapper.getFor(InventoryComponent.class);
    public static final ComponentMapper<InventorySlotComponent> inventorySlot = ComponentMapper.getFor(InventorySlotComponent.class);
    public static final ComponentMapper<AttackRange> attackRange = ComponentMapper.getFor(AttackRange.class);
    public static final ComponentMapper<Camera> camera = ComponentMapper.getFor(Camera.class);
    public static final ComponentMapper<CollidableComponent> collidable = ComponentMapper.getFor(CollidableComponent.class);
    public static final ComponentMapper<DetectionProximity> detectionProximity = ComponentMapper.getFor(DetectionProximity.class);
    public static final ComponentMapper<Enemy> enemy = ComponentMapper.getFor(Enemy.class);
    public static final ComponentMapper<EnemyStateMachine> enemyStateMachine = ComponentMapper.getFor(EnemyStateMachine.class);
    public static final ComponentMapper<EquipTypeComponent> equipType = ComponentMapper.getFor(EquipTypeComponent.class);
    public static final ComponentMapper<ExpComponent> exp = ComponentMapper.getFor(ExpComponent.class);
    public static final ComponentMapper<Health> health = ComponentMapper.getFor(Health.class);
    public static final ComponentMapper<ID> id = ComponentMapper.getFor(ID.class);
    public static final ComponentMapper<Item> item = ComponentMapper.getFor(Item.class);
    public static final ComponentMapper<LevelComponent> level = ComponentMapper.getFor(LevelComponent.class);
    public static final ComponentMapper<ManaComponent> mana = ComponentMapper.getFor(ManaComponent.class);
    public static final ComponentMapper<MovementBehavior> movementBehavior = ComponentMapper.getFor(MovementBehavior.class);
    public static final ComponentMapper<Name> name = ComponentMapper.getFor(Name.class);
    public static final ComponentMapper<ObstacleComponent> obstacle = ComponentMapper.getFor(ObstacleComponent.class);
    public static final ComponentMapper<Orientation> orientation = ComponentMapper.getFor(Orientation.class);
    public static final ComponentMapper<ParameterComponent> parameter = ComponentMapper.getFor(ParameterComponent.class);
    public static final ComponentMapper<Player> player = ComponentMapper.getFor(Player.class);
    public static final ComponentMapper<Position> position = ComponentMapper.getFor(Position.class);
    public static final ComponentMapper<Size> size = ComponentMapper.getFor(Size.class);
    public static final ComponentMapper<Spawn> spawn = ComponentMapper.getFor(Spawn.class);
    public static final ComponentMapper<SpawnArea> spawnArea = ComponentMapper.getFor(SpawnArea.class);
    public static final ComponentMapper<Speed> speed = ComponentMapper.getFor(Speed.class);
    public static final ComponentMapper<Sprite> sprite = ComponentMapper.getFor(Sprite.class);
    public static final ComponentMapper<StateComponent> state = ComponentMapper.getFor(StateComponent.class);
    public static final ComponentMapper<Steering> steering = ComponentMapper.getFor(Steering.class);
}
