import isAlive?:"com.mygdx.game.aiTasks.IsAlive"
import changeWanderTarget:"com.mygdx.game.aiTasks.enemy.steering.ChangeTarget"

import isWandering?:"com.mygdx.game.aiTasks.enemy.steering.IsWandering"
import isReturning?:"com.mygdx.game.aiTasks.enemy.steering.IsReturning"
import isPursuing?:"com.mygdx.game.aiTasks.enemy.steering.IsPursuing"

import isWanderSteering?:"com.mygdx.game.aiTasks.enemy.steering.IsWanderSteering"
import isReturnSteering?:"com.mygdx.game.aiTasks.enemy.steering.IsReturnSteering"
import isPursueSteering?:"com.mygdx.game.aiTasks.enemy.steering.IsPursueSteering"

import setToWander:"com.mygdx.game.aiTasks.enemy.steering.SetToWander"
import setToReturn:"com.mygdx.game.aiTasks.enemy.steering.SetToReturn"
import setToPursue:"com.mygdx.game.aiTasks.enemy.steering.SetToPursue"

subtree name:"useWanderBehavior"  #name is for referencing
  selector  #return success when first child returns success (execute children to get first success)
    isWanderSteering?
    setToWander
  changeWanderTarget

subtree name:"useReturnBehavior"
  selector
    isReturnSteering?
    setToReturn

subtree name:"usePursueBehavior"
  selector
    isPursueSteering?
    setToPursue

root  #start of btree
  dynamicGuardSelector  #actively checks guards and executes child of first passed guard
    (isAlive?) (isWandering?) $useWanderBehavior  #executes the subtree if guard is true
    (isAlive?) (isReturning?) $useReturnBehavior
    (isAlive?) (isPursuing?)  $usePursueBehavior
